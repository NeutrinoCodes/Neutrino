/// @file

#include "openclgl.hpp"
#include "program.hpp"
#include "utilities.hpp"

/// These files are relative to the build/mac or build/linux directory:
#define POINT_VERTEX_FILE       "/home/eyelash/Documents/Research/projects/computational_mechanics/neutrino/Code/shader/vertex.vert"
#define POINT_FRAGMENT_FILE     "/home/eyelash/Documents/Research/projects/computational_mechanics/neutrino/Code/shader/fragment.frag"
#define TEXT_VERTEX_FILE        "/home/eyelash/Documents/Research/projects/computational_mechanics/neutrino/Code/shader/text_vertex.vert"
#define TEXT_FRAGMENT_FILE      "/home/eyelash/Documents/Research/projects/computational_mechanics/neutrino/Code/shader/text_fragment.frag"
#define KERNEL_FILE             "/home/eyelash/Documents/Research/projects/computational_mechanics/neutrino/Code/kernel/thekernel.cl"

int main()
{
  double tic;                                                                   // Initial loop time [us]...
  double toc;                                                                   // Final loop time [us]...

  load_point_vertex(POINT_VERTEX_FILE);                                         // Loading point vertex shader source...
  load_point_fragment(POINT_FRAGMENT_FILE);                                     // Loading point fragment shader source...
  load_text_vertex(TEXT_VERTEX_FILE);                                           // Loading text vertex shader source...
  load_text_fragment(TEXT_FRAGMENT_FILE);                                       // Loading text fragment shader source...

  init_opengl_context();
  init_opencl_context();                                                        // Initializing OpenCL context...

  setup();                                                                      // Executing Neutrino "setup" function...

  while (!glfwWindowShouldClose(window))                                        // Opening window...
  {
    tic = getCPUTime();                                                         // Getting "tic" [us]...
    arcball();                                                                  // Evaluating arcball...
    clear_screen();                                                             // Clearing screen...
    loop();                                                                     // Executing Neutrino "loop" function...
    finish_queue();                                                             // Finishing OpenCL kernel queue...
    refresh_screen();                                                           // Refreshing screen...
    toc = getCPUTime();                                                         // Getting "toc" [us]...
    ascii_spin("Action: running OpenCL program...", tic, toc);                  // Displaying loop duration [us]...
  }

  ascii_spin_stop();                                                            // Stopping loop duration display...
  destroy_opengl_context();
	destroy_opencl_context();                                                     // Destroying OpenCL context...
  terminate();                                                                  // Terminating Neutrino application...

  return 0;
}
